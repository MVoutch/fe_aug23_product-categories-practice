{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","preProducts","categoryId","map","product","category","categoriesFromServer","find","x","user","usersFromServer","u","sortUser","sortCategory","SORT_BY_ID","SORT_BY_PRODUCT","SORT_BY_CATEGORY","SORT_BY_USER","App","useState","sortUserId","getSortUserId","query","setQuery","setSortCategory","sort","setSort","reverse","setReverse","products","users","categories","length","filter","filterQuery","trim","toLowerCase","includes","a","b","result","localeCompare","className","onClick","href","cn","type","placeholder","value","onChange","event","currentTarget","prev","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f7e0d82.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst preProducts = productsFromServer.map((product) => {\n  const category = categoriesFromServer.find(x => x.id === product.categoryId);\n  const user = usersFromServer.find(u => u.id === category.ownerId);\n\n  return {\n    product: { ...product },\n    category: { ...category },\n    user: { ...user },\n    sortUser: user.id,\n    sortCategory: category.id,\n  };\n});\n\nconst SORT_BY_ID = 'id';\nconst SORT_BY_PRODUCT = 'product';\nconst SORT_BY_CATEGORY = 'category';\nconst SORT_BY_USER = 'user';\n\nexport const App = () => {\n  const [sortUserId, getSortUserId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [sortCategory, setSortCategory] = useState([]);\n  const [sort, setSort] = useState(SORT_BY_ID);\n  const [reverse, setReverse] = useState(false);\n  let products = [...preProducts];\n  const users = [...usersFromServer];\n  const categories = [...categoriesFromServer];\n\n  if (sortUserId) {\n    if (sortUserId > 0 && sortUserId <= users.length) {\n      products = products.filter(x => x.sortUser === sortUserId);\n    }\n  }\n\n  if (query) {\n    const filterQuery = query.trim().toLowerCase();\n\n    products = products\n      .filter(({ product }) => product.name\n        .toLowerCase()\n        .includes(filterQuery));\n  }\n\n  if (sortCategory.length) {\n    products = products.filter(x => sortCategory.includes(x.sortCategory));\n  }\n\n  if (sort) {\n    products.sort((a, b) => {\n      let result;\n\n      switch (sort) {\n        case SORT_BY_ID:\n          result = a.product.id - b.product.id;\n          break;\n\n        case SORT_BY_PRODUCT:\n          result = a.product.name.localeCompare(b.product.name);\n          break;\n\n        case SORT_BY_CATEGORY:\n          result = a.category.title.localeCompare(b.category.title);\n          break;\n\n        case SORT_BY_USER:\n          result = a.user.name.localeCompare(b.user.name);\n          break;\n\n        default:\n          return 0;\n      }\n\n      if (reverse) {\n        return -result;\n      }\n\n      return result;\n    });\n  }\n\n  const reset = () => {\n    getSortUserId(0);\n    setQuery('');\n    setSortCategory([]);\n    setSort(SORT_BY_ID);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                onClick={() => getSortUserId(0)}\n                href=\"#/\"\n                className={cn({ 'is-active': sortUserId === 0 })}\n              >\n                All\n              </a>\n\n              {users.map(u => (\n                <a\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  onClick={() => getSortUserId(u.id)}\n                  className={cn({ 'is-active': sortUserId === u.id })}\n                  key={u.id}\n                >\n                  {u.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={event => setQuery(event.currentTarget.value)}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {query !== '' && (\n                  <span className=\"icon is-right\">\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setQuery('')}\n                    />\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={cn(\n                  'button is-success mr-6',\n                  { 'is-outlined': sortCategory.length },\n                )}\n                onClick={() => setSortCategory([])}\n              >\n                All\n              </a>\n\n              {categories.map(category => (\n                <a\n                  data-cy=\"Category\"\n                  className={cn(\n                    'button mr-2 my-1',\n                    { 'is-info': sortCategory.includes(category.id) },\n                  )}\n                  href=\"#/\"\n                  onClick={() => {\n                    if (!sortCategory.includes(category.id)) {\n                      setSortCategory(prev => prev.concat(category.id));\n                    } else {\n                      setSortCategory(prev => prev\n                        .filter(id => id !== category.id));\n                    }\n                  }}\n                >\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={reset}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {products.length ? (\n            <table\n              data-cy=\"ProductTable\"\n              className=\"table is-striped is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      ID\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => {\n                          if (sort !== SORT_BY_ID) {\n                            setSort(SORT_BY_ID);\n                          } else if (sort === SORT_BY_ID && !reverse) {\n                            setReverse(true);\n                          } else {\n                            setSort(SORT_BY_ID);\n                            setReverse(false);\n                          }\n                        }}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={cn(\n                              'fas',\n                              { 'fa-sort': sort !== SORT_BY_ID },\n                              { 'fa-sort-up': sort === SORT_BY_ID && reverse },\n                              { 'fa-sort-down':\n                                  sort === SORT_BY_ID && !reverse },\n                            )}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Product\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => {\n                          if (sort !== SORT_BY_PRODUCT) {\n                            setSort(SORT_BY_PRODUCT);\n                          } else if (sort === SORT_BY_PRODUCT && !reverse) {\n                            setReverse(true);\n                          } else {\n                            setSort(SORT_BY_ID);\n                            setReverse(false);\n                          }\n                        }}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={cn(\n                              'fas',\n                              { 'fa-sort': sort !== SORT_BY_PRODUCT },\n                              { 'fa-sort-up':\n                                  sort === SORT_BY_PRODUCT && reverse },\n                              { 'fa-sort-down':\n                                  sort === SORT_BY_PRODUCT && !reverse },\n                            )}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Category\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => {\n                          if (sort !== SORT_BY_CATEGORY) {\n                            setSort(SORT_BY_CATEGORY);\n                          } else if (sort === SORT_BY_CATEGORY && !reverse) {\n                            setReverse(true);\n                          } else {\n                            setSort(SORT_BY_ID);\n                            setReverse(false);\n                          }\n                        }}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={cn(\n                              'fas',\n                              { 'fa-sort': sort !== SORT_BY_CATEGORY },\n                              { 'fa-sort-up':\n                                  sort === SORT_BY_CATEGORY && reverse },\n                              { 'fa-sort-down':\n                                  sort === SORT_BY_CATEGORY && !reverse },\n                            )}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      User\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => {\n                          if (sort !== SORT_BY_USER) {\n                            setSort(SORT_BY_USER);\n                          } else if (sort === SORT_BY_USER && !reverse) {\n                            setReverse(true);\n                          } else {\n                            setSort(SORT_BY_ID);\n                            setReverse(false);\n                          }\n                        }}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={cn(\n                              'fas',\n                              { 'fa-sort': sort !== SORT_BY_USER },\n                              { 'fa-sort-up':\n                                  sort === SORT_BY_USER && reverse },\n                              { 'fa-sort-down':\n                                  sort === SORT_BY_USER && !reverse },\n                            )}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {products.map(({ product, category, user }) => (\n                  <tr data-cy=\"Product\" key={product.id}>\n                    <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                      {product.id}\n                    </td>\n\n                    <td data-cy=\"ProductName\">{product.name}</td>\n                    <td data-cy=\"ProductCategory\">\n                      {category.icon}\n                      {` - `}\n                      {category.title}\n                    </td>\n\n                    <td\n                      data-cy=\"ProductUser\"\n                      className={cn(\n                        { 'has-text-danger': user.sex === 'f' },\n                        { 'has-text-link': user.sex === 'm' },\n                      )}\n                    >\n                      {user.name}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <p data-cy=\"NoMatchingMessage\">\n              No products matching selected criteria\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}